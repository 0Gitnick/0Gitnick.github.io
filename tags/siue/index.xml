<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SIUe on Nicholas Johnson</title><link>https://0gitnick.xyz/tags/siue/</link><description>Recent content in SIUe on Nicholas Johnson</description><language>en</language><lastBuildDate>Mon, 21 Sep 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://0gitnick.xyz/tags/siue/index.xml" rel="self" type="application/rss+xml"/><item><title>SIUe Unauthenticated SMTP Server</title><link>https://0gitnick.xyz/siue-unauthenticated-smtp-server/</link><pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate><guid>https://0gitnick.xyz/siue-unauthenticated-smtp-server/</guid><description>&lt;h2 id="email-server">Email Server&lt;/h2>
&lt;p>During my last semester at &lt;a href="https://siue.edu">SIUe&lt;/a>, one of my professors demonstrated spoofing an email using an unauthenticated SMTP server (smtp.siue.edu) on the university network. I believe the server is still present on the network despite being reported multiple times to IT. It isn&amp;rsquo;t accessible on the public internet, only through the university&amp;rsquo;s network that all students have easy access to. Non-students could also gain access to the network fairly easily while at the university and therefore have access to the email server.&lt;/p>
&lt;p>The email server has no authentication whatsoever. You don&amp;rsquo;t have to offer any credentials to send emails. You can&amp;rsquo;t read others' emails, however. This means you don&amp;rsquo;t even need to be a student to send emails. As a non-student, you can access the email server through Telnet and send emails as any student, professor, faculty or staff member. With that, you can send out emails to any email lists. This unauthenticated server has been present on the network for years according to other students I have talked to.&lt;/p>
&lt;p>I hope the server gets taken off the network, but this underscores a larger issue. American colleges and universities are institutions with some of the weakest cybersecurity where you would expect better. This makes them easy targets for hackers. The reason is they don&amp;rsquo;t have strong incentives to do better. Unless having poor cybersecurity is going to lose money, business as usual will continue and unauthenticated email servers will stay online.&lt;/p></description></item><item><title>Networked EV Charging Stations</title><link>https://0gitnick.xyz/networked-ev-charging-stations/</link><pubDate>Wed, 09 Sep 2020 00:00:00 +0000</pubDate><guid>https://0gitnick.xyz/networked-ev-charging-stations/</guid><description>&lt;p>Eventually I want to write a separate post on why mass surveillance is stupid, dangerous, and incompatible with democracy. For those that read my blog, I&amp;rsquo;m probably preaching to the choir though. I&amp;rsquo;m going to write the rest of this post assuming the reader already understands why mass surveillance is bad, or at least sees how it could be. If you don&amp;rsquo;t understand why massive government surveillance is a problem, you think that &amp;ldquo;privacy is dead&amp;rdquo;, or &amp;ldquo;I have nothing to hide&amp;rdquo; comes to mind, you should do more research on mass surveillance before continuing. With that, I&amp;rsquo;ll continue.&lt;/p>
&lt;h2 id="electric-vehicle-charging-stations">Electric Vehicle Charging Stations&lt;/h2>
&lt;p>I want to quickly cover some basics about EV charging stations for those who don&amp;rsquo;t know. There are two types of EV charging stations: networked and non-networked. The networked ones require you to sign up on the web with your real name, credit card information, address, and car make and model. You have to agree to the terms of service and privacy policy. After signing up, you receive a swipe card in the mail. Because you have to swipe an ID card to use networked charging stations, the network (Chargepoint) knows who you are, where you charged your car, when, and for how long. Non-networked charging stations don&amp;rsquo;t require you to use an ID card, so they can&amp;rsquo;t collect any personalized data on you.&lt;/p>
&lt;h2 id="gas-stations">Gas Stations&lt;/h2>
&lt;p>EV charging stations are worse for your privacy than gas stations. With gas stations, you can pay anonymously in cash. No form of ID is necessary. While you can pay with a credit card, it&amp;rsquo;s not necessary. EV charging stations don&amp;rsquo;t allow you to pay in cash. At a minimum, there is a record of your credit card transaction to the charging network. Also, due to the swipe card you have to use for the charging station, every single charge is tied to your real identity. This means the network (Chargepoint) creates an extensive dossier on everywhere you&amp;rsquo;ve been and sells that information to data brokers. You must agree to all this or you can&amp;rsquo;t even use the charging station. You can still charge your electric vehicle at home or at non-networked charging stations, but non-networked stations are far less common than networked ones. So if your EV doesn&amp;rsquo;t have much range or you are in a rural area, you&amp;rsquo;ll definitely be going out of your way to avoid the networked stations. The only way around this is reverting back to using a gas station, if you have a hybrid car. If you have a fully electric vehicle, then you&amp;rsquo;re just out of luck.&lt;/p>
&lt;h2 id="the-infrastructure-of-surveillance">The Infrastructure of Surveillance&lt;/h2>
&lt;p>The bad news is the worst is still yet to come. There&amp;rsquo;s not a huge opposition to networked charging stations and the issue is even lesser known than that of mass surveillance. And in the United States, if EVs are the way of the future and demand increases for them, there will need to be many more charging stations than there are now. This is bad because it&amp;rsquo;s almost certain that these new charging stations are going to be proprietary and networked, selling customer data. It will become increasingly difficult to resist the privacy invasion of our location data once the infrastructure is already in place. What are you going to do, not charge your car? Once infrastructure is already paid for, there needs to be a very strong incentive to change it. The best course of action now is to oppose the networked charging stations before they are deployed and avoid using them, even if it&amp;rsquo;s inconvenient. That&amp;rsquo;s because most of the charging stations that are going to be deployed have not yet been deployed. So, there&amp;rsquo;s still time to stop the surveillance infrastructure before it expands.&lt;/p>
&lt;h4 id="how-to-fight-back">How to Fight Back&lt;/h4>
&lt;p>If your school or workplace wants to install a networked charging station, tell them you oppose this decision and would instead be in favor of a more privacy-respecting option such as a non-networked station. If you own an EV yourself, tell them that you will refuse to use the networked charging station because you don&amp;rsquo;t want to encourage proprietary surveillance infrastructure. You could also stick flyers on the networked charging stations calling for EV drivers not to use the networked stations, or at least to become informed about the problem and organize. Chargepoint puts out their own &lt;a href="https://www.chargepoint.com/blog/7-reasons-why-non-networked-charging-non-starter/">propoganda&lt;/a> trying to spin the surveillance off as a good thing, a myth we must dispel. The fact is all of the items on their list are doable with non-networked charging stations running free software. If you want analytics or access controls, you could imagine a cryptographic system that uses secure private tokens to protect EV driver privacy while also making analytics possible without any sign up or extra hassle to the driver. Proprietary charging station phone apps could also be avoided and replaced with free software alternatives.&lt;/p>
&lt;p>&lt;a href="https://amatas.com/news/view/schneider-electric-s-vehicle-charging-station-could-be-hacked">Vulnerabilities&lt;/a> in networked charging stations have been found in the past. As everyone should know, any time there is a database containing personal data, it becomes the target of hackers. The only way to completely prevent data from being stolen or leaked in the long run is by not collecting the data in the first place. Luckily with EV charging stations, storing location data is completely unnecessary. With enough public pressure we can just do away with it entirely. We just have to show that privacy is the priority.&lt;/p>
&lt;h2 id="siue">SIUe&lt;/h2>
&lt;p>When I was attending SIUe, I emailed the parking services staff in October of 2019 about the privacy concerns I had about the new Chargepoint stations that were being installed and encouraged them to install a non-networked station instead. The reply explained that while they understood my concerns, Chargepoint is what all the public universities in Illinois are using and they determined that it would be in the best interest of their constituents to install it. I was not able to change their decision, but I got the parking services staff to at least think about the issue because a well thought-out critique demands a well thought-out response. I don&amp;rsquo;t want to see the United States turning into a nightmarish big brother surveillance hellscape where privacy is impossible and the government has such strong surveillance capability on everyone that it&amp;rsquo;s &amp;ldquo;turnkey tyranny&amp;rdquo;, as Snowden would say. Networked charging stations are one step closer to that bleak reality. Don&amp;rsquo;t doubt for a second that the government can access EV charging station location data from networked charging stations. They absolutely can. Collecting the locations on millions of law-abiding citizens is a capability no government or private entity should be allowed have. Of course companies and governments get the same location data through smartphones anyway, but that must end too. One injustice doesn&amp;rsquo;t justify another. That just means we have more work to do.&lt;/p>
&lt;h2 id="national-security-and-privacy">National Security and Privacy&lt;/h2>
&lt;p>In a democracy, the people have the power to self-govern. Democracy is incompatible with mass government surveillance in the long term. What you have to realize is mass corporate surveillance &lt;em>is&lt;/em> mass government surveillance. In the United States, the federal government has the authority to force companies to turn over customer data and then not tell customers about it. The data collection and analysis often happens automatically. It is impossible to meaningfully oppose a government that has near omniscience about the entire population. All it takes is one competent, evil politician to convert a heavily surveilled democracy into a dictatorship. Obviously, networked charging stations aren&amp;rsquo;t going to do that on their own. But they are a stepping stone on a path whose destination is nigh-impossible to pull back from. Worse, foreign governments can purchase and use this location information on high-profile individuals driving electric vehicles to gain influence. Massive data collection of Americans' location is not only incompatible with American democracy by giving government far too much power (knowledge is power), but it&amp;rsquo;s also a national security threat. The very existence of a database with real-time location data points on millions of Americans is a national security threat because foreign governments and hackers will find a way to get access. The only full solution is to make sure the data is never collected in the first place, by opposing networked charging stations and organizing and informing EV drivers around the issue.&lt;/p></description></item><item><title>Why I Left ITS</title><link>https://0gitnick.xyz/why-i-left-its/</link><pubDate>Thu, 02 Jul 2020 00:00:00 +0000</pubDate><guid>https://0gitnick.xyz/why-i-left-its/</guid><description>&lt;h2 id="background">Background&lt;/h2>
&lt;p>In October of 2018, I was hired to work at information technology services at &lt;a href="https://www.siue.edu/its">SIUe&lt;/a>, where I also studied. I worked there until early this year. I worked part time and met many good people there and learned how the university works and is organized. The job was well-suited for students because we usually have some free time to do our studies. I worked at the &lt;a href="https://www.siue.edu/its/helpdesk">help desk&lt;/a> answering calls for a while before I eventually moved to a labs and classrooms technician position. The duties of the labs and classrooms student workers were essentially to do anything technology-related that needed done in the labs and classrooms. This included taking inventory for all the items, imaging computers, assisting professors and students if something broke during class time, setting up projectors, conference areas, replacing hardware, and responding to support calls. It was a good first job for learning common workplace skills.&lt;/p>
&lt;h2 id="learning-about-free-software">Learning About Free Software&lt;/h2>
&lt;p>Everyone that is passionate about free/libre software has a story. Most students and teachers working with computers have never even heard about free software, even in computer science courses. It&amp;rsquo;s one of the biggest social issues people are &lt;em>completely&lt;/em> ignorant about. Part of that is because the ideas are misunderstood because &amp;ldquo;open source&amp;rdquo; has replaced free software in the classroom and workplace. Another reason is programmers don&amp;rsquo;t get into programming because they want to grapple with the ethical implications of computing. What I&amp;rsquo;m saying is the kind of person who studies programming &lt;em>oftentimes&lt;/em> is uninterested in ethics. Obviously this isn&amp;rsquo;t true for every programmer out there, but the point I&amp;rsquo;m making is this: &lt;strong>If you have any values at all, everything you do either moves you closer to your values, farther away from them, or is neutral. Whether you like it or not, this implies an ethical dimension to everything, including computing.&lt;/strong>&lt;/p>
&lt;p>When I took my job at ITS, I had never heard about free software. I still used GNU/Linux though. And I had heard of open source at the time. I knew who Linus Torvalds was, but had never heard of Richard Stallman until one day at the help desk my coworker told me about a disagreement between Linus Torvalds and Richard Stallman. I wasn&amp;rsquo;t given any details besides that. We probably got on the subject after talking about Linus or Linux. Anyway, this piqued my interest. So when I returned home that day, I researched about it and found the Free Software Foundation. I remembered watching a Computerphile video about free software months prior, but the ideas didn&amp;rsquo;t stick. I only completely understood after watching some of Richard Stallman&amp;rsquo;s lectures. After listening to Stallman explain free software from the ground up and seeing examples of how proprietary software is used to mistreat users, and my own past experiences, his ideas about how computing should be rang true for me. Stallman&amp;rsquo;s ideas gave me a whole new model to understand software. Everything came together and past experiences with proprietary software suddenly made more sense. I acquired an ethical framework for computing overnight.&lt;/p>
&lt;h2 id="reduced-hours">Reduced Hours&lt;/h2>
&lt;p>Adjusting to my new understanding of free software was a gradual, effortful process. Over the course of several months, I slowly stopped using proprietary applications I had been using and moved over to free software instead. Nearly 100% of my job was working with proprietary software though. If I had refused to use proprietary Windows or fix Windows machines at my job, I would most certainly have been let go for refusing to do the work. The whole university IT department wasn&amp;rsquo;t going to change the way they did things because I didn&amp;rsquo;t want to use the proprietary software. In my personal life, I was using almost exclusively free software. I was struggling very hard to do so in my classes and to promote free software. Yet at my job, I was being completely inconsistent. I was going around all day working on and fixing Windows machines. I was supporting proprietary software on university computers, sometimes imaging entire classrooms of 30 computers with Windows. I knew that Windows was an evil platform, and I was installing it. Every week I went in to work, I became increasingly bothered by what I was participating in while trying to advocate for the opposite outside of work. Outside of ITS, avoiding proprietary software while completing my coursework took up so much of my time. I was falling behind on assignments, so I asked for reduced hours at ITS.&lt;/p>
&lt;h2 id="quitting">Quitting&lt;/h2>
&lt;p>I found that even with reduced hours, I could not get all my work done. I was already extremely demotivated from jumping through hoops no other students had to jump through emailing professors back and forth to avoid the proprietary software my courses were pushing on me while still trying to complete assignments. But I also had the feeling that I couldn&amp;rsquo;t go on every day supporting Windows machines and Microsoft software. It wasn&amp;rsquo;t just Windows either. There were multiple proprietary systems that we &lt;em>had&lt;/em> to interact with. It started really getting to me. It did take a long time, but eventually I couldn&amp;rsquo;t avoid the feeling that I was doing a harm to the world. I gave my 2 weeks notice and then resigned from my position at ITS in early 2020. The larger reason I resigned was due to the proprietary software. But a smaller part of it was that I needed more time to focus on studies. So it wasn&amp;rsquo;t a decision based purely on ethics.&lt;/p>
&lt;p>Some readers are going to think resigning (&lt;em>partially&lt;/em>) over ethical reasons was a mistake because some other student would just take my place and the job would be done anyway. But I don&amp;rsquo;t find that convincing. For one, even if someone else took my place, at least it wouldn&amp;rsquo;t be me. Leave someone else to cross that line. It&amp;rsquo;s too psychologically burdensome for me to work with proprietary software knowing I&amp;rsquo;m doing the world a harm. It&amp;rsquo;s likely that whoever would take my place would not know about free software and would not feel so bothered by the work they are doing because of that. Also, this kind of thinking is a self-fulfilling prophecy. If everyone thinks this way, then everyone will reason that they should just accept the injustice because someone else will if they don&amp;rsquo;t. That&amp;rsquo;s a good way of keeping giant evil corporations like Microsoft in power. Microsoft prefers you to think that way. I&amp;rsquo;m not saying it&amp;rsquo;s necessarily untrue. Maybe someone has already taken my place. But I&amp;rsquo;m saying to keep in mind that it&amp;rsquo;s self-fulfilling. That kind of thinking is exactly the kind that discourages challenging existing power structures.&lt;/p>
&lt;p>Another objection readers might have to me leaving my job over free software is that even if I find another job where I don&amp;rsquo;t have to use any proprietary software, I might be contributing to other social harms. In other words, it&amp;rsquo;s hard to find a place to work that is without ethical problems. I can&amp;rsquo;t deny this is true. Some people work at jobs where they have to use Windows, but they have kids to take care of. If they don&amp;rsquo;t go in to work, they might not be able to support their family. I&amp;rsquo;m not trying to suggest everyone should do what I did. I&amp;rsquo;m definitely not trying to take the moral high ground compared to those people. I&amp;rsquo;m just explaining why I did what I did. But there are less &amp;ldquo;nuclear&amp;rdquo; options for people who can&amp;rsquo;t quit their job. Spread the word about free software to friends, family, and coworkers. Set an example for others by being a mindful consumer. For example, don&amp;rsquo;t buy home assistants with proprietary software such as the Amazon Alexa or Google Home. Don&amp;rsquo;t buy &amp;ldquo;smart&amp;rdquo; devices like smart tv&amp;rsquo;s, smart fridges, smart lightbulbs, etc. These are small sacrifices consumers can make right now. With collective effort, we can create a large market for ethical tech and eliminate the market for unethical tech if only enough of us refuse to buy it. &lt;strong>If the relatively small sacrifices aren&amp;rsquo;t made now, the sacrifices required in the future to turn the tide will be much, much greater. Living without proprietary software is already far more inconvenient than most people will accept. And it&amp;rsquo;s only going to get worse unless we reject proprietary products today.&lt;/strong>&lt;/p>
&lt;p>That was my short call to action. If you&amp;rsquo;ve made it this far, thank you for reading. If you find my ideas valuable, then please consider making a donation. Details are on my &lt;a href="../../about#donate">about page&lt;/a>.&lt;/p></description></item><item><title>SIUe e-ID Creation and Maintenance Problems</title><link>https://0gitnick.xyz/siue-e-id-creation-and-maintenance-problems/</link><pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate><guid>https://0gitnick.xyz/siue-e-id-creation-and-maintenance-problems/</guid><description>&lt;h1 id="arbitrary-password-rules">Arbitrary Password Rules&lt;/h1>
&lt;p>I&amp;rsquo;ll go over them one at a time. They are found at &lt;a href="https://eid.siue.edu/am/change_password">https://eid.siue.edu/am/change_password&lt;/a>.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>The previous 6 passwords cannot be reused.&lt;br>
I don&amp;rsquo;t have much to say about this one. It only reduces the password space by 6, so it doesn&amp;rsquo;t make brute-forcing easier.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>A password must contain at least seven characters (letters or numbers) but no more than eight characters.&lt;br>
&lt;em>&lt;strong>Cringe!&lt;/strong>&lt;/em> The &lt;a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-63b.pdf">2017 NIST guidelines&lt;/a> say passwords &lt;em>must&lt;/em> be at least 8 characters. SIUe seems to have gotten this advice backwards with a &lt;em>maximum&lt;/em> of 8 character passwords.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>A password must contain at least five unique characters.&lt;br>
This goes against the 2017 NIST guideline against imposing composition rules for passwords. It also reduces the already small password space.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>A password must contain at least one letter (A-Z or a-z) and at least one number (0-9).&lt;br>
Again imposing an arbitrary composition rule that reduces the password space.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>A password must start with a letter or a number.&lt;br>
Do I even need to say it a third time?&lt;/p>
&lt;/li>
&lt;li>
&lt;p>A password cannot contain any of the characters $&amp;amp;@=+&amp;quot;/[]:;|*,?&amp;lt;&amp;gt;~' or a space.&lt;br>
Throw out the NIST guideline on using all printable ASCII characters and unicode. In fact, it doesn&amp;rsquo;t support unicode. I tried inserting a unicode character only to get errors. From a security perspective, this rule is extremely concerning. I&amp;rsquo;m not sure what it&amp;rsquo;s trying to do, but some of the characters are used in SQL commands. Could this indicate a &lt;a href="https://en.wikipedia.org/wiki/SQL_injection">SQL injection&lt;/a> vulnerability? Since SIUe has to update the password across multiple systems (Blackboard, Outlook, etc.), it could be due to a compatibility issue. This could also be a security concern.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>I&amp;rsquo;m going to lump the last 4 together because the only thing I have to add is that they reduce the password space again and are composition rules.&lt;/p>
&lt;ul>
&lt;li>A password cannot be a person&amp;rsquo;s name, an e-ID or any word found in the dictionary.&lt;/li>
&lt;li>A password cannot be any of the following spelled backwards: a person&amp;rsquo;s name, an e-ID or any word found in the dictionary.&lt;/li>
&lt;li>A password cannot have a repeating pattern (e.g. ababab or abcdefg).&lt;/li>
&lt;li>A password cannot have a pattern like &amp;lsquo;ccNNNNNc&amp;rsquo; where &amp;lsquo;c&amp;rsquo; represents any character and &amp;lsquo;N&amp;rsquo; represents any number. (These are National Insurance numbers and are widely known on the web.)&lt;/li>
&lt;/ul>
&lt;h2 id="60-day-reset">60 Day Reset&lt;/h2>
&lt;p>Every 60 days, you are required to &lt;a href="https://www.siue.edu/its/eid_faq.shtml#expired">reset your password&lt;/a>. The NIST password policy guidelines say users shouldn&amp;rsquo;t be required to change their passwords regularly or arbitrarily. If an account is compromised, then it makes sense. But otherwise, you&amp;rsquo;ll just be making everyone increment the last digit in their password every time. Almost no one will create a completely different password when they can just change one character.&lt;/p>
&lt;p>Furthermore, all these password rules make it much more difficult to analyze the number of possible passwords. To do that, you would need every e-ID and every word in &amp;ldquo;the dictionary&amp;rdquo;. Who knows what words are included even. I&amp;rsquo;m certain that even the administrators have no idea how big the password space is, but it&amp;rsquo;s definitely insufficient. This brings me to my next point.&lt;/p>
&lt;h1 id="autogenerated-password-patterns">Autogenerated Password Patterns&lt;/h1>
&lt;p>If your password is reset using your security question, or you get your password generated for you at the helpdesk, there seems to be patterns to the passwords. I&amp;rsquo;ve noticed after testing this out by resetting my password that the generator always seems to prefer 2 digits and 6 letters. The generator seems to prefer 3 letter sequences with a consonant followed by a vowel followed by another consonant. This makes it easy to pronounce. It always uses lowercase. I don&amp;rsquo;t think I have ever seen it use uppercase. This is why I do &lt;em>&lt;strong>not&lt;/strong>&lt;/em> recommend using passwords autogenerated by SIUe. They have patterns. If you obtain an autogenerated password, change it as soon as possible. Since the generator algorithm is closed off, there&amp;rsquo;s no way to know how secure it is. Your best bet is to generate a password yourself using a password manager and memorize that.&lt;/p>
&lt;h1 id="annoying-ui">Annoying UI&lt;/h1>
&lt;h2 id="looks">Looks&lt;/h2>
&lt;p>Take a look at the &lt;a href="https://eid.siue.edu/am/e-ID">creation and maintenance page&lt;/a>. I myself am not great at designing graphical user interfaces, but this one is bad. There was a class I had where the professor went over how awful the creation and maintenance page was &lt;em>during&lt;/em> the class, but I won&amp;rsquo;t mention who. Some things they noticed on the face of it: For some strange reason, the table has four columns, but the third and fourth column only have one item. The radio buttons get their own separate cells which look awful with the borders. Everything is at the top of the page, not centered. The gray background is very bland and it looks like not much thought was put into the color scheme. And it definitely isn&amp;rsquo;t going to look nice on mobile.&lt;/p>
&lt;h2 id="input-ambiguity">Input Ambiguity&lt;/h2>
&lt;p>The date of birth on the &amp;ldquo;I want to get an e-ID&amp;rdquo; option and the &amp;ldquo;I have an e-ID but I forgot my password&amp;rdquo; option have 3 separate input boxes! The day and month are dropdowns while the year is a text box. It doesn&amp;rsquo;t indicate how you should enter the year either, as 2 digits or 4 digits. It wants 4. But, if you enter 2, it gives you a generic error message saying the account information is not correct.&lt;/p>
&lt;p>The new password and confirm new password fields on the &lt;a href="https://eid.siue.edu/am/change_password">change password page&lt;/a> allow you to input in your browser 9 characters, but the server just rejects anything more than 8. It also has text above the input field saying it only allows 8 characters.&lt;/p>
&lt;h2 id="invalid-html">Invalid HTML&lt;/h2>
&lt;p>After seeing the poor quality of the subdomain&amp;rsquo;s webpages, I got curious and clicked view source. They were using XHTML 1.0 and the legacy windows-1252 character encoding. After checking all the pages reachable from the radio buttons with the HTML validator at &lt;a href="https://validator.w3.org/">https://validator.w3.org/&lt;/a>, the results were as expected. Every URL I checked had invalid HTML at the time of this writing:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://eid.siue.edu/am/e-ID">https://eid.siue.edu/am/e-ID&lt;/a> (85 errors)&lt;/li>
&lt;li>&lt;a href="https://eid.siue.edu/am/get_e-ID">https://eid.siue.edu/am/get_e-ID&lt;/a> (16 errors)&lt;/li>
&lt;li>&lt;a href="https://eid.siue.edu/am/reset.pl">https://eid.siue.edu/am/reset.pl&lt;/a> (19 errors)&lt;/li>
&lt;li>&lt;a href="https://eid.siue.edu/am/change_password">https://eid.siue.edu/am/change_password&lt;/a> (91 errors, 2 warnings)&lt;/li>
&lt;li>&lt;a href="https://eid.siue.edu/am/bid_lookup">https://eid.siue.edu/am/bid_lookup&lt;/a> (14 errors)&lt;/li>
&lt;/ul>
&lt;p>The landing page for the university at &lt;a href="https://www.siue.edu">https://www.siue.edu&lt;/a> also had invalid HTML yielding 13 errors from the validator. Other URLs under the SIUe domain also had errors. These errors are less severe than the creation and maintenance page but still deserve to be addressed. The HTML looks like it was written in an editor, not by a human.&lt;/p>
&lt;h2 id="usability">Usability&lt;/h2>
&lt;p>After you submit the &lt;a href="https://eid.siue.edu/am/change_password">change password form&lt;/a>, you are redirected to a webpage where you have the option to change your secret phrase. You can use the secret phrase to reset your password if you forget it. The problem is the secret phrase works the opposite way than you think it does. You don&amp;rsquo;t select a question and input the answer. You input both the question and answer manually. And then when you go to reset your password, it will give you the answer to the secret phrase and you have to come up with the question. If you think about it for a while, it&amp;rsquo;s not hard to see that some answers correspond to really only one question. So this is not a good scheme.&lt;/p>
&lt;p>For example, &amp;ldquo;The Incredibles&amp;rdquo; is the hint. You can guess the question &amp;ldquo;What is your favorite movie?&amp;rdquo;. On the other hand, picking a question from a dropdown box and having a normal security question challenge setup would be a better scheme. If a student isn&amp;rsquo;t aware of how the system works, it might leak sensitive information about them to hackers, especially since they can define their own question &lt;em>and&lt;/em> answer.&lt;/p>
&lt;h1 id="data-stored-in-plaintext">Data Stored in Plaintext&lt;/h1>
&lt;p>When it lets you change the secret phrase and answer, it literally shows you the existing secret phrase and answer. That means that the question to your secret phrase is not hashed and salted. SIUe has a big database of questions of ~13k active students. And don&amp;rsquo;t forget all past students' questions and answers going back years are still in the system. And their answers to those questions are just sitting on a server somewhere ready for a data breach. This is pure negligence and should be fixed as soon as possible. There&amp;rsquo;s no reason to have personal questions and answers of students sitting on a server somewhere in plain text.&lt;/p>
&lt;h1 id="denial-of-service-vulnerability">Denial of Service Vulnerability&lt;/h1>
&lt;p>There is a denial of service vulnerability related to the &lt;a href="https://eid.siue.edu/am/change_password">change password form&lt;/a>. If you unsuccessfully reset your password more than 5 times, your ability to reset your password will be locked for 24 hours. This password reset attempt limit persists across browsing sessions and IP addresses. It must be stored on SIUe servers. That means anyone can use the &lt;a href="https://0gitnick.xyz/siue-cyberstalking-feature/">people search feature&lt;/a>, which I covered previously, to scrape for e-ID&amp;rsquo;s. Then, they can spam the password reset form with every e-ID scraped from the search feature. Since it&amp;rsquo;s only necessary to do this once every 24 hours per account, anyone can effectively break the password reset feature for all active students, faculty and staff with a simple Python script.&lt;/p>
&lt;p>Of course, students can make a call to the helpdesk to get the password reset limit fixed so they have 5 more attempts within the 24 hours. But it&amp;rsquo;s possible to run this attack continuously with such high volume that even students who call the helpdesk and get a reset on the attempts cannot change their password. I&amp;rsquo;m not encouraging or condoning denial of servicing the change password feature. I&amp;rsquo;m only pointing the attack vector exists in the hope that it gets fixed.&lt;/p></description></item><item><title>SIUe Cyberstalking Feature</title><link>https://0gitnick.xyz/siue-cyberstalking-feature/</link><pubDate>Sat, 06 Jun 2020 00:00:00 +0000</pubDate><guid>https://0gitnick.xyz/siue-cyberstalking-feature/</guid><description>&lt;p>&lt;a href="https://www.siue.edu/search/people.shtml">https://www.siue.edu/search/people.shtml&lt;/a>&lt;/p>
&lt;p>This lesser-known feature has existed for at least 2 years and probably much longer than that. I emailed their &lt;a href="mailto:help@siue.edu">helpdesk&lt;/a> several times pointing out the search feature could be abused by cyberstalkers and data mined. I pointed out that it should require authentication and not be open to the public internet. It&amp;rsquo;s a huge risk for student privacy and safety. Anyone can find any student&amp;rsquo;s full name, area of study, rank, home address, phone number and university email. A week later, I still have no response.&lt;/p>
&lt;p>A quick search reveals that other university&amp;rsquo;s student directories generally don&amp;rsquo;t include the student&amp;rsquo;s rank, home address, or phone number. SIUe should at least remove the home address and phone number fields from public view.&lt;/p></description></item><item><title>Rejecting Visual Studio</title><link>https://0gitnick.xyz/rejecting-visual-studio/</link><pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate><guid>https://0gitnick.xyz/rejecting-visual-studio/</guid><description>&lt;h2 id="background">Background&lt;/h2>
&lt;p>This semester I took Intro to Artificial Intelligence at &lt;a href="https://www.siue.edu">SIUe&lt;/a>. Artificial Intelligence is a senior level course. I&amp;rsquo;ll call the professor, &amp;ldquo;Professor X&amp;rdquo; to preserve anonymity.&lt;/p>
&lt;h2 id="story">Story&lt;/h2>
&lt;h3 id="assignment-one---cats">Assignment One - Cats&lt;/h3>
&lt;p>Since my time giving in to using Visual Studio in software engineering class and seeing the inner conflict that caused, I was much more prepared to stand up for my beliefs in A.I. class. The very first assignment we got was to write an A.I. that solves a &amp;ldquo;cat in the hat&amp;rdquo; problem involving finding certain values for the height of the cats and number of cats in each hat (each cat has a hat with more cats except the cat at height one). I was intrigued. I could have written a program that simulates the cats, but I instead went for an analytical approach and derived two single logarithmic equations that yielded the values efficiently. I still wasn&amp;rsquo;t sure how to solve both equations, so I developed a binary search algorithm for the right value instead. I was disappointed however when after reading the specification I discovered the project had to be completed using Visual Studio and written in C++. Visual Studio is proprietary software made by Microsoft that requires users to agree to a license agreement (which I read) and submit themselves to privacy-invading telemetry. Ew.&lt;/p>
&lt;p>I was not thrilled about this, so I opted to write my program using a different IDE and compile it with the gnu-c++ compiler. I wanted to get ahead of this so there wouldn&amp;rsquo;t be any issue, so I emailed Professor X explaining why Visual Studio is proprietary malware, or at least potential malware. Professor X responded that he did not believe it is malware and I should use it anyway. So I responded over email again explaining my beliefs about free software and why students ought not be required to use Visual Studio. He said he would consult with his colleagues about it and the grader as well. Professor X and the grader got back to me explaining that they couldn&amp;rsquo;t change the assignment just for me as there were over thirty students in the class and allowing students to submit their work differently would be too much hassle. Maybe don&amp;rsquo;t ask students to use proprietary software?&lt;/p>
&lt;p>After I had already written my program, I spent over four extra hours learning how to use &lt;a href="https://cmake.org/">CMake&lt;/a> so hopefully it would open in Visual Studio when the grader went to grade it. This was extra work I did that no one else in class had to do because I refused to use proprietary software. After I submitted it, I got a grade of zero because the grader was unable to run my program in Visual Studio. As a side note, it seems ludicrous to me that we were demanded to submit our C++ programs in the form of Visual Studio project files. That is just not a sane way to submit a project. But anyway, I sent a long email to the professor again explaining that my program did compile and run and that I spent four hours trying to use CMake to get it to work for the grader. He emailed back saying how me using CMake was a huge waste of everyone&amp;rsquo;s time, and if I had such a strong problem with Visual Studio, then maybe I should go talk to the dean about it instead of talking to individual professors about my beliefs. I guess his point was if the dean didn&amp;rsquo;t agree that the university should only use free software then I should just accept proprietary software?&lt;/p>
&lt;p>The professor and grader agreed, just for this one time, to regrade my program to reflect the work I put in instead of my willingness to agree to Microsoft&amp;rsquo;s insane licenses and run proprietary malware just to write a C++ program, and I got a 90% losing 10% only because I submitted a day late. For the next two programs, the professor and grader agreed that I can submit only the source code cpp files because the grader had figured out how to run them in Visual Studio.&lt;/p>
&lt;h3 id="assignment-two-and-three">Assignment Two and Three&lt;/h3>
&lt;p>The second assignment was &lt;a href="https://en.wikipedia.org/wiki/Klotski">Huarong Path&lt;/a>, also called Klotski. It is a sliding puzzle where you try to get a particular piece into a particular spot on the board by sliding all the tiles around until you have the piece in the destination spot. There are many heuristics you can develop for this, but I found that implementation was just as important as heuristics. The third assignment was Fore &amp;amp; Aft where you try to reverse the positions of the differently colored pegs. Imagine a large square broken into four quadrants, but two quadrants that are diagonal to one another are missing, and there is one empty center peg and the quadrants have differently colored pegs. The rules are that you can move any peg into an empty adjacent peg or jump over pegs like in the game checkers. I ended up using &lt;a href="https://en.wikipedia.org/wiki/A*_search_algorithm">A*&lt;/a> to solve the puzzle. I was able to submit these two assignments with only the source code files, so I didn&amp;rsquo;t have to use Visual Studio and there was no problem.&lt;/p>
&lt;h3 id="assignment-four---n-queens-puzzle">Assignment Four - N Queens Puzzle&lt;/h3>
&lt;p>Fast forward to the fourth assignment. It was an N Queens puzzle. For N=8, this is better known as the &lt;a href="https://en.wikipedia.org/wiki/Eight_queens_puzzle">8 Queens Puzzle&lt;/a>. This was my favorite puzzle to write a solution for. I found a simple &lt;a href="https://en.wikipedia.org/wiki/Hill_climbing">hill-climbing&lt;/a> algorithm from our textbook that was much faster at finding solutions than was asked of us. We had to find three unique solutions. I just allowed my program to take as input the board size as well as the initial position of the first queen. For some reason it was stipulated that we had to enable one queen in the solution to be &amp;ldquo;fixed&amp;rdquo; to a certain square so she was guaranteed to be there. It didn&amp;rsquo;t take me long to have this solution written up and submitted, but my grade unexpectedly returned with a failing grade for the assignment. It was because gnu-c++ allowed specifying C arrays without a size, but the standard C++ compiler didn&amp;rsquo;t, so it didn&amp;rsquo;t compile in Visual Studio.&lt;/p>
&lt;p>When I turned on warnings when compiling with gnu-c++, I immediately saw what the grader was talking about and fixed it. The grader allowed me to fix it since it was just an issue with the compiler compatibility and not my code. I got full points back for this assignment. I was told after the first assignment that it would be my responsibility to make sure my code worked in Visual Studio and if it didn&amp;rsquo;t, I would be graded accordingly. But the grader was willing to allow this to slide since it was such a minor issue and strictly to do with compiler compatibility.&lt;/p>
&lt;h3 id="encounter-with-professor-x">Encounter with Professor X&lt;/h3>
&lt;p>I talked with Professor X in person outside of class about proprietary Visual Studio. The first thing I remember that he mentioned was how hard it would be for me finding employment with my philosophy about software. This is undeniably true. There is far less money in creating free software than proprietary freedom-destroying software. So I explained to him that my primary focus isn&amp;rsquo;t just employment or living the easiest life possible.&lt;/p>
&lt;p>If I wanted to live an easy life and disregard my ethics totally then yes I could do that. But I need to do something to make the world a better place, or at least not worse. There&amp;rsquo;s already enough people making it worse. Also, it&amp;rsquo;s obvious that I&amp;rsquo;ll have to work somewhere that is going to allow me to work within my free software values. I&amp;rsquo;m not going to be working at AT&amp;amp;T, Google, or Microsoft. If I&amp;rsquo;m not able to make a living with free software, I&amp;rsquo;ll do some job unrelated to computer science for an income and write free software on the side. It would be much easier to sleep at night doing that instead.&lt;/p>
&lt;p>He then suggested I use the university computers instead of my own. I explained to him how this doesn&amp;rsquo;t solve the issue because Visual Studio is still proprietary and I would have to use the Windows malware that is installed on campus computers as well. He said that the university has a deal with Microsoft in which Microsoft deactivated their surveillance features for university computers. SIUe does have a deal with Microsoft (which is why they use so much Microsoft software), but I seriously doubt Microsoft deactivates the spying (telemetry) features for their programs at SIUe. Even if they do, Windows and Visual Studio are still proprietary so there&amp;rsquo;s no way to confirm that.&lt;/p>
&lt;p>There was also the extremely common confusion about how software companies will make money producing only free software. Beforehand, I had emailed Professor X supporting links from the &lt;a href="https://www.fsf.org">FSF&lt;/a> website explaining about free software. I tried explaining that it&amp;rsquo;s not about price, but freedom. I could have been misreading the situation so don&amp;rsquo;t take this as fact, but it seemed to me that he didn&amp;rsquo;t have any interest in learning about free software or the ethical implications. He seemed more interested in getting me to conform to using Visual Studio so that it would make his and the grader&amp;rsquo;s job easier. The reason I think that is because throughout our entire prolonged exchange, emails and in person, he didn&amp;rsquo;t mention ethics once and expressed his sentiment that the conversation was &amp;ldquo;pointless&amp;rdquo;. I don&amp;rsquo;t think conversations about ethics are &amp;ldquo;pointless&amp;rdquo;. I think a conversation about ethics is important before starting any project, not just writing software.&lt;/p>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>I have seen this theme again and again having conversations with professors. Perhaps I just don&amp;rsquo;t explain free software well enough, which is why I provided links and video resources to Professor X. One thing I often see, which is true of anyone changing their mind in general, is that people won&amp;rsquo;t do it on the spot in realtime. Reading a post like this you may think that I wasted my time. But people do change their minds and it almost always happens in private, not under the pressure of a realtime conversation. And even if people don&amp;rsquo;t change their minds completely, they can often be nudged in the right direction. So don&amp;rsquo;t lose hope just because someone doesn&amp;rsquo;t immediately see things your way. Many professors at SIUe that I&amp;rsquo;ve talked to just aren&amp;rsquo;t accustomed to thinking about software freedom as an important issue. I expressed my frustration to Professor X about how the issues he was bringing up were peripheral to me, and that if he really wanted to convince me to use Visual Studio and Windows he would have to show me why my ethical beliefs are wrong.&lt;/p>
&lt;p>The truth is unless someone is very brave and intellectually honest, they&amp;rsquo;re not going to change their mind (admit they were wrong) on the spot. Especially professors because they would have to rewrite entire assignments to use different software and restructure their coursework which is potentially a lot of work. I think they are also strongly encouraged from above to use particular proprietary software because of the university&amp;rsquo;s deal with Microsoft. They would have to go against that. But I have seen professors use their own computers in class, so it&amp;rsquo;s still very feasible. It&amp;rsquo;s a lot of work that professors aren&amp;rsquo;t required to do and for reasons most of them aren&amp;rsquo;t accustomed to considering. I&amp;rsquo;m not defending their decisions to continue using proprietary software, just explaining why they don&amp;rsquo;t change things. I&amp;rsquo;d like to engage with a professor and see them realize my point on the spot and decide then and there to restructure their course to be more ethical, but that never happens.&lt;/p>
&lt;p>Nonetheless, I do think the conversations I&amp;rsquo;ve had do have an impact. And most of that impact I&amp;rsquo;m not seeing because it happens in private after a lot of thought given to ethics, but it does happen. As a matter of strategy, my advice to anyone trying to spread the word about free software at work or universities is twofold.&lt;/p>
&lt;h3 id="advice-1">Advice 1&lt;/h3>
&lt;p>Keep having conversations with people about free software, every opportunity you get that seems appropriate. Especially have conversations with those with the most authority to do something to make change. Don&amp;rsquo;t worry about looking like a fool because times are desperate and if free software philosophy doesn&amp;rsquo;t spread more, we risk losing more ground to encroaching proprietary software. We cannot let the free world disappear.&lt;/p>
&lt;h3 id="advice-2">Advice 2&lt;/h3>
&lt;p>Encourage others to reject proprietary software and reject it yourself. Get a few people who agree with you and form a club or pact to reject it. There&amp;rsquo;s not always free software that perfectly replaces proprietary software, in which case you must reject the proprietary software entirely with no substitute. At SIUe and any other universities, professors aren&amp;rsquo;t going to take much notice if you go off on your own trying to create little workarounds for the proprietary software they want you to use. The only action which they have to respond to is when you outright refuse to use the proprietary software and most importantly tell them why you&amp;rsquo;re rejecting it. It&amp;rsquo;s helpful to propose free software at the same time, but most important is telling them you refuse to use proprietary software and stand behind that decision with unflinching stubbornness. The only way to slow the encroachment of proprietary software in schools, universities and workplaces is to refuse to use or develop it, demand alternatives, and spread the word.&lt;/p></description></item><item><title>Inception - Rejecting Discord, Draw.io, and Visual Studio</title><link>https://0gitnick.xyz/inception-rejecting-discord-draw.io-and-visual-studio/</link><pubDate>Mon, 30 Mar 2020 00:00:00 +0000</pubDate><guid>https://0gitnick.xyz/inception-rejecting-discord-draw.io-and-visual-studio/</guid><description>&lt;h2 id="background">Background&lt;/h2>
&lt;p>In the spring of 2018, I took software engineering at &lt;a href="https://www.siue.edu">SIUe&lt;/a>. Software engineering is a junior level CS course. In my view, it serves as preparation for the more demanding two semester development effort that is the senior project. I&amp;rsquo;ll call the professor, &amp;ldquo;Professor X&amp;rdquo; to preserve anonymity.&lt;/p>
&lt;h2 id="story">Story&lt;/h2>
&lt;h3 id="project-i">Project I&lt;/h3>
&lt;p>The first project was for the purposes of getting everyone accustomed to using Git and Redmine and working in a team as well as doing some documentation. We were put in groups of three to four and given the task of writing a fairly simple program with a GUI and some basic functionality in C#. I remember being very anxious upon forming a group because I knew my group members would likely want to use &lt;a href="https://slack.com">Slack&lt;/a> or &lt;a href="https://discordapp.com/">Discord&lt;/a> or some other popular proprietary walled garden messaging platform. Luckily for the first project of the class, my three group members were not thrilled, but were willing to undergo the inconvenience of downloading and using &lt;a href="https://riot.im/">Riot.im&lt;/a> / &lt;a href="https://matrix.org/">Matrix&lt;/a>.&lt;/p>
&lt;h4 id="communication">Communication&lt;/h4>
&lt;p>It was awkward and uncomfortable to be the only person in the group refusing to use Discord when everyone else very quickly came to a consensus on it. Peer pressure is a real thing. But after explaining my reasons, I was able to win over the group after a few days and get everyone using Riot. I even got everyone to exchange their device keys over email so we could all have an encrypted group chat. The peace of mind of having an encrypted room and using free software instead of having our group messages data mined and sold as would have been the case with Discord cannot be overvalued for me. I didn&amp;rsquo;t really win the group over by convincing them with the benefits of encryption and free software. I think they just wanted to get the project moving along and saw the easiest way forward was to adapt to me. So I got past the first hurdle.&lt;/p>
&lt;h4 id="ide">IDE&lt;/h4>
&lt;p>I don&amp;rsquo;t recall the specifics of the program, but it probably had some buttons and text boxes and would have been similar in difficulty to a graphical desktop calculator application. Our group did the required UML diagrams. The only thing left was to code the classes we diagrammed. This is where the trouble started for me. Professor X&amp;rsquo;s project specification I believe was handed down from Professor Y who died unexpectedly. So Professor X was standing in for Professor Y teaching with his slides. Unfortunately I&amp;rsquo;ve heard Professor Y had a love for Windows and his project specification required everyone to use Visual Studio.&lt;/p>
&lt;p>At this point I got worried because Visual Studio is proprietary software, and it was a battle with my conscience to use it or not. I definitely wasn&amp;rsquo;t willing to install it on my personal machine. So instead, I found Monodevelop and was able to use it to complete project I. We still had to use Winforms for the GUI part which was awful, but at least I was able to avoid Visual Studio. The members of my group installed and used Visual Studio on their personal computers. So far, I had been able to completely avoid proprietary software.&lt;/p>
&lt;h3 id="project-ii">Project II&lt;/h3>
&lt;p>Project II was a similar story to project I except that I was in a group of three instead of four. This time, we were assigned a project called Cougar Delivery. The specifications outlined a delivery service we had to make software for. The delivery service software had to perform tasks such as tracking shipments, generating performance reports and cost of business charts, allow clients to order shipments and generate routes for shipping packages for the shipping business. It had many more requirements, so I won&amp;rsquo;t list them all. But the idea was a single graphical application that enabled all the business operations related to running a delivery business. Realistically, this would have been divided up into several applications that handled general aspects of business such as finances, tracking, client and employee login systems and permissions, and more. But the point of the class was documentation and design rather than implementation.&lt;/p>
&lt;h4 id="communication-1">Communication&lt;/h4>
&lt;p>Again, it was awkward asking everyone to use Riot when they had never heard of it. I had a hard time finding a soft way to propose using it when I wasn&amp;rsquo;t willing to accept a proprietary alternative. But my two group members were willing to use it. I again was able to convince them to exchange device keys in person for an encrypted room. So far, all was well.&lt;/p>
&lt;h4 id="documentation">Documentation&lt;/h4>
&lt;p>And so we began our documentation. This time, I was not our project lead. Another team member had more time to work on the project, so he took the initiative. He was very diligent and before we had even started writing code, we ended up with an estimate of close to eighty classes total. We had polished UML diagrams for all those classes including package diagrams and UML class diagrams and a three tier architecture established before a single line of code was written. I was very satisfied with that. For my diagrams, I used &lt;a href="http://dia-installer.de/">Dia&lt;/a> and my teammates used &lt;a href="https://app.diagrams.net/">draw.io&lt;/a>. Dia was difficult and annoying to use as far as alignment goes. It might have been due to my inexperience never having used it before, but I used it anyway for freedom. Draw.io is not free software. It uses proprietary Javascript and requires a software license to purchase the app. Nevertheless my teammates were able to at least export their diagrams in png format so I could see them using free software. Our project lead claimed to have used Dia before and said it was too inconvenient usage-wise.&lt;/p>
&lt;p>The deliverables for the project were scheduled in such a way that we had to do all the documentation before starting the project, and continually revise documentation as the project went along. Our documentation was so effective that I trust we could&amp;rsquo;ve handed it to any other group in the class, and they would have been able to implement our entire design. Some of the documents were done using Google Docs regrettably. I strongly suggested using &lt;a href="https://sandstorm.io/">Sandstorm&lt;/a> instead since it is free software and doesn&amp;rsquo;t require proprietary Javascript in the browser. That did not end up happening since I had other classes to worry about and we were crunched for time. If I could retake the class, I would have created a separate shared repo for documentation and used a word processor for editing instead. Our team lead did not see this as viable since he felt we needed to be able to see everyone else&amp;rsquo;s changes in real time. There was a lot of talk about using Sandstorm, but I was never able to make it happen.&lt;/p>
&lt;p>Another possible free software self-hosting alternative to Google Docs would have been an &lt;a href="https://etherpad.org/">Etherpad&lt;/a> instance, but public Etherpad instances did not have the plugins necessary for nicely formatting documents unless I self-hosted and installed them myself. And I guess I didn&amp;rsquo;t have the time to set up an instance or something. But I did put a few hours of work in trying to get it working. It was very discouraging to be working so hard on something very tangientially related to our actual project. I wasn&amp;rsquo;t able to move the group toward using Etherpad either. I ultimately ran out of time trying to make it work. I was the one pushing to use something besides Google Docs mainly due to its proprietary Javascript.&lt;/p>
&lt;p>After I had been defeated unable to move the group to something besides Google Docs, I gave in to using Google Docs which I was able to use anonymously without an account. I just used the shared link. But I still had to run the proprietary Javascript in the browser which I now regret giving in to. This failure was very discouraging and harmed my motivation for doing the project. I discussed this extensively with the project lead but we weren&amp;rsquo;t able to bypass the issue. After this failure, I didn&amp;rsquo;t know the worse was still yet to come.&lt;/p>
&lt;h4 id="testing-framework">Testing Framework&lt;/h4>
&lt;p>We had to use a testing framework for the current project iteration to test our code. Of course our professor&amp;rsquo;s hand-me-down specification and slides insisted that we use MSTest. I did some background research because it sounded proprietary. I found it was available for MonoDevelop, but when I went to install it, it asked me to read and sign a license agreement first. I believe it was proprietary based on the terms it was asking me to agree to when I tried to install it through MonoDevelop. I clicked decline. Instead of installing it, I dug in my heels and went to the professor after class. Regrettably, I did not mention the idea of free software very explicitly. Instead I talked about how I wasn&amp;rsquo;t willing to agree to the terms so MonoDevelop could run the tests. He chuckled when I mentioned I wasn&amp;rsquo;t using Visual Studio as the project requirements laid out, preparing for a potentially awkward conversation. And then when I mentioned not wanting to use the testing framework, he seemed perplexed. He told me I could write the unit tests and have a team member who has Visual Studio run them, thus bypassing agreeing to the license. This didn&amp;rsquo;t satisfy me though, because it just passes the buck off to someone else. I definitely wasn&amp;rsquo;t going to rely on my team members to agree to something I myself wouldn&amp;rsquo;t. I let him know that I felt his idea didn&amp;rsquo;t really solve the issue for me. I asked Professor X if I could use the NUnit testing framework instead, a libre library. He told me to ask the grader.&lt;/p>
&lt;p>So I emailed the grader explaining in detail my ethical concerns about MSTest. He got back to me promptly admitting that he did not know about the ethical issue and would be willing to accomodate me given that NUnit could work in Visual Studio. It could, so I wrote my tests for our code using NUnit. I even rewrote some of our tests that had been written in MSTest into NUnit to increase the freedom of our project which wasn&amp;rsquo;t too difficult. I had successfully dodged what could have became a freedom issue. I also discussed this with our group. They continued writing the unit tests using MSTest.&lt;/p>
&lt;h4 id="ide-1">IDE&lt;/h4>
&lt;p>I thought I would be able to use MonoDevelop as before without any issues. I had solved the issue of the testing framework. What more issues could arise? The database. The instructions for the database in the database tier of our three tier architecture were written to explain how to use the SQL database in Visual Studio. It used libraries that only worked in Visual Studio if I recall correctly. This caused an inner conflict for me. I had never failed a class before, but I knew the professor wasn&amp;rsquo;t going to rewrite the specifications in the middle of the project and it would be too much for the grader to try to get something else working and too much for me to research another solution. I talked about this issue ad nauseum to our group lead, who was sympathetic but tried to still convince me to just write the database anyway. I wasn&amp;rsquo;t able to get him to really make sense of the freedom issue despite sending supporting links from the FSF website to explain my position. After heated debate, we eventually came to the compromise that I would only work on the part of our program that did not include the database. I would work on the other two tiers; the controller and graphical interface. I now regard this compromise as a mistake.&lt;/p>
&lt;p>This still did not resolve the issue because I was unable to compile our program without having the SQL database that only worked in Visual Studio. I painfully forced myself to use Visual Studio in the university computer lab to write the project. This occurred with our team late at night all of us working furiously before the due date to get as much coded as possible and submitted. We were doing rapid trio programming because none of us had time until the last moment to work on the project. I was glad to have finished the project, but still giving in to using proprietary software did not sit well with me. I was ashamed of having given in but also understood my teammates would have had to give me a bad performance report if I outright refused to work on the project due to the database tier. So practically the choice was between failing and tacitly condoning Visual Studio by using it. I made the mistake of choosing to use Visual Studio to pass instead of putting my foot down and refusing and going to the professor again about the ethical issue. I think I didn&amp;rsquo;t go to the professor again because I didn&amp;rsquo;t want to inconvenience him too much to avoid another awkward conversation. I ought to have went immediately to the professor again to discuss the freedom issue. I passed the class with a good mark and accomplished the project, but still felt gross about giving in to proprietary software.&lt;/p></description></item><item><title>Rejecting Discord and Google Colab</title><link>https://0gitnick.xyz/rejecting-discord-and-google-colab/</link><pubDate>Mon, 30 Mar 2020 00:00:00 +0000</pubDate><guid>https://0gitnick.xyz/rejecting-discord-and-google-colab/</guid><description>&lt;h2 id="background">Background&lt;/h2>
&lt;p>This semester I took Deep Learning at &lt;a href="https://www.siue.edu">SIUe&lt;/a>. Deep learning is a senior level CS elective course. I&amp;rsquo;ll call the professor, &amp;ldquo;Professor X&amp;rdquo; to preserve anonymity.&lt;/p>
&lt;h2 id="story">Story&lt;/h2>
&lt;p>In Deep Learning class, after the lectures, we had to get into groups for our class project. The class project consisted of designing and implementing our own neural network which would do some novel task. It didn&amp;rsquo;t take me long to get into a group. The issue as always was finding a communication platform that we could all use that was free software. Since most students opt for proprietary walled gardens instead such as &lt;a href="https://discordapp.com/">Discord&lt;/a>, I had a lot of difficulty because I wasn&amp;rsquo;t willing to use Discord. Our whole group of four agreed on using Discord except for me. Email wouldn&amp;rsquo;t be viable. It&amp;rsquo;s not great for real time communication and file sharing. Even after I explained that I don&amp;rsquo;t use proprietary software, the group still did not want to budge as I expected. So the admin of the Discord &amp;ldquo;channel&amp;rdquo; and I got together and set up a &lt;a href="https://matrix.org/bridges/">Matrix bridge&lt;/a>. I was surprised at how easy this was. Because Matrix has a &lt;a href="https://github.com/Half-Shot/matrix-appservice-discord">Matrix-Discord bridge&lt;/a> available and there is a &lt;a href="https://t2bot.io/">public bot&lt;/a> called t2bot, I was able to use Riot.im client instead of Discord. Riot.im is free software and Matrix is an open protocol which is more acceptable than the proprietary walled garden of Discord. The bot allowed me to create a Matrix room which bridged Discord and the Matrix network. It took less than ten minutes to set up. Now that I got the hang of using it, I&amp;rsquo;m able to get it working in less than five minutes. There are a few quirks but overall it works fantastically and it&amp;rsquo;s completely free. I recommend &lt;a href="https://t2bot.io/donations/">donating&lt;/a> if you use the bot since there is no charge for using it. It&amp;rsquo;s a great tool for avoiding proprietary Discord and Slack.&lt;/p>
&lt;p>&lt;a href="https://colab.research.google.com">Google Colab&lt;/a> is a service Google offers that gives researchers and students a free GPU. It can be used for things like training neural networks in Python. It wasn&amp;rsquo;t required for this course per se, but if you didn&amp;rsquo;t have one you had better have a GPU or be in a group with a member that had a GPU. I have a computer with a GPU, but it is AMD, not Nvidia so it wouldn&amp;rsquo;t work with the Python libraries like Keras and Tensorflow we were using to train the neural networks. I discovered this after I had already set up the machine for class unfortunately. I really took issue with Google Colab being basically required. If students didn&amp;rsquo;t agree to the Google terms of service, how would it be possible to do the project? You could have relied on a group member to have an account and train the networks, but that just pushes the problem back a step to your team member agreeing to the terms of service. Worse, Colab requires proprietary Javascript in the browser so you would have to run proprietary code to use it. And you know Google is collecting your experiment data in case you find something of interest because that&amp;rsquo;s their whole evil business model.&lt;/p>
&lt;p>I ended up emailing Professor X about the issue explaining that students shouldn&amp;rsquo;t have to agree to Google&amp;rsquo;s terms of service and run proprietary Javascript just to take Deep Learning class. He responded saying unfortunately that while he understands my concerns that&amp;rsquo;s the only way the class could exist and also it was in the syllabus. I don&amp;rsquo;t believe that at all. If it was within budget, the school could offer students GPUs in a lab to train the neural networks the same way the networking lab has special networking equipment for each student. Of course SIUe isn&amp;rsquo;t going to do that because it costs lots of money and using a service from an evil data collecting company costs only your soul. Besides, no one except me in the whole computer science department would care about the ethical advantage of students having their own dedicated GPUs, so it wasn&amp;rsquo;t in SIUe&amp;rsquo;s interest to purchase GPUs for each student.&lt;/p>
&lt;p>There were other problems with the class as well not related to proprietary software. I believe the average grade on the midterm was below 50%. There was a lot of background needed to understand the concepts in class that many students didn&amp;rsquo;t have. I felt like my time was being wasted every day in the class because too much material was being covered way too quickly to really learn anything. I don&amp;rsquo;t say that about many classes because there&amp;rsquo;s always the student responsibility to study, but if you ask me that class was a mess. So after I found out my GPU wouldn&amp;rsquo;t work and I couldn&amp;rsquo;t train our group&amp;rsquo;s network myself, I completely lost motivation for the project. There was no way for me to run the code since I refused to sign up to Google Colab. I couldn&amp;rsquo;t even check if my code ran and due to COVID-19, I couldn&amp;rsquo;t get with any group members who had a GPU. The only option was to rent a VPS with a GPU and neural network training capabilities. I decided ultimately that I shouldn&amp;rsquo;t have to and wasn&amp;rsquo;t going to rent a VPS just to pass a class. Despite having our midpoint report finished and a working neural network, I wasn&amp;rsquo;t really learning anything to the depth I wanted to in that class, and the proprietary Google Colab had me discouraged, so I dropped the class.&lt;/p></description></item><item><title>The Tipping Point - Rejecting Windows, Zoom, Lockdown Browser, and the Lockdown Monitor</title><link>https://0gitnick.xyz/the-tipping-point-rejecting-windows-zoom-lockdown-browser-and-the-lockdown-monitor/</link><pubDate>Mon, 30 Mar 2020 00:00:00 +0000</pubDate><guid>https://0gitnick.xyz/the-tipping-point-rejecting-windows-zoom-lockdown-browser-and-the-lockdown-monitor/</guid><description>&lt;h2 id="background">Background&lt;/h2>
&lt;p>This semester I took networking at &lt;a href="https://www.siue.edu">SIUe&lt;/a>. Networking is a senior level CS course. I&amp;rsquo;ll call the professor, &amp;ldquo;Professor X&amp;rdquo; to preserve anonymity.&lt;/p>
&lt;h2 id="story">Story&lt;/h2>
&lt;h3 id="windows">Windows&lt;/h3>
&lt;p>The first software freedom issue I had in this class had to do with the Wiresharks labs. &lt;a href="https://www.wireshark.org/">Wireshark&lt;/a> is free software that can be used to capture and analyse network traffic. So there was no issue with Wireshark. Actually, the issue was with the assignment instructions. The instructions were written so that some tasks had to be performed outside of Wireshark and screenshotted. If I remember correctly Professor X said he did not make any changes to the assignment before giving us the assignment. The assignments were actually obtained from the &lt;a href="https://gaia.cs.umass.edu/kurose_ross/wireshark.htm">University of Massachusetts, Amherst&lt;/a>. The DHCP Wireshark lab contained instructions that only work on Windows.&lt;/p>
&lt;p>It wouldn&amp;rsquo;t have been hard for me to find the equivalent commands on GNU/Linux, but by this point I realized that me doing all the legwork to get things working on GNU/Linux ultimately doesn&amp;rsquo;t do much good. It gets me by but it doesn&amp;rsquo;t help other students or have any effect moving coursework toward using free software. So instead, I decided I wasn&amp;rsquo;t going to do the extra work myself, and instead included a note in my completed assigment submission stating that I don&amp;rsquo;t own a Windows machine and wouldn&amp;rsquo;t use it. So I downloaded the Wireshark trace from the University of Massachusetts (the assignment said we could do this if we couldn&amp;rsquo;t get Wireshark to capture). I imported it into Wireshark and used it for the duration of the assignment.&lt;/p>
&lt;p>Back in class after the assignment was graded, Professor X announced that students would no longer be permitted to download the trace from the University of Massachusetts. It would have to be captured manually by following the Windows-only instructions. This swiftly closed the loophole I used to bypass using Windows. Therefore, it is no longer possible to take networking with Professor X without using Windows unless you want to do extra work. And by the way, this is one of, if not the most ardent GNU/Linux professors at SIUe based on my experience. He said in class that he uses &lt;a href="https://www.archlinux.org/">Arch&lt;/a> and is comfortable doing things in the terminal. The point I&amp;rsquo;m trying to get across is that if you want to only use free software, do not study at SIUe. It is not a free software friendly university and you will struggle trying to work around that.&lt;/p>
&lt;h3 id="zoom">Zoom&lt;/h3>
&lt;p>After the corona virus lockdown was declared in Illinois and the university shut down all classes on campus, the lectures needed a way to continue. Professor X went for &lt;a href="https://zoom.us/">Zoom&lt;/a>. Zoom is proprietary crapware. You can download Zoom on your computer or use it through the browser which probably requires proprietary Javascript and camera and microphone access. I emailed Professor X if there was another way I could watch the lectures. To accomodate me, he began recording the meetings and emailing them to everyone. However, he said he was still taking attendance with Zoom unfortunately. So I found out it&amp;rsquo;s possible to use &lt;a href="https://en.wikipedia.org/wiki/Session_Initiation_Protocol">SIP&lt;/a>. I attempted to set up an SIP account so I could use Zoom, but then I quickly gave up on that and decided on just using the recordings. I felt that I shouldn&amp;rsquo;t have to do extra legwork to avoid using proprietary software. If professors are going to suggest proprietary software to students, which they shouldn&amp;rsquo;t, then they should at least offer a free software alternative that works equally well. Of course, Zoom in the long run is turning out to be a disaster as proprietary software often does.&lt;/p>
&lt;p>I want to elaborate a bit on how Zoom is turning out to be a disaster. Zoom is a privacy nightmare. It actually has an attention tracking feature documented in the &lt;a href="https://support.zoom.us/hc/en-us/articles/115000538083-Attendee-attention-tracking">knowledge base&lt;/a> which creepily allowed hosts of a Zoom meeting to track if the participants were paying attention or not. The CEO &lt;a href="https://blog.zoom.us/wordpress/2020/04/01/a-message-to-our-users/">addressed multiple issues&lt;/a>. One issue was uninvited participants joining and crashing conferences. Another was that the iOS client contained the Facebook SDK. Facebook is a surveillance monster, so of course that was an absolute privacy disaster and it had to be removed. Zoom video and audio doesn&amp;rsquo;t even have end-to-end encryption according to &lt;a href="https://theintercept.com/2020/03/31/zoom-meeting-encryption/">this article&lt;/a>. Hackers quickly found a way to exploit Zoom to expose Windows passwords and showed a &lt;a href="https://twitter.com/hackerfantastic/status/1245133371262619654">screenshot of it on Twitter&lt;/a>. Some Zoom calls may have been routed through China, where geofencing should have prevented this. &lt;a href="https://www.businessinsider.com/china-zoom-data-2020-4">The CEO didn&amp;rsquo;t say how many users could have been effected&lt;/a>. China does not enforce laws about personal data privacy so who knows if the calls got collected, stored, or analyzed.&lt;/p>
&lt;p>So now some universities are rushing over to Microsoft Teams, which will also be a privacy and security disaster forced upon students yet again. They are just going from one proprietary privacy disaster to the next when the best solution is to just use free software. Teams is proprietary and the Teams website requires proprietary Javascript and perhaps worse a Microsoft account where you must agree to their insane terms of service. So at this point you may be wondering, what free software is out there that would be reasonable for schools to use that would be better? &lt;a href="https://jitsi.org/jitsi-meet/">Jitsi&lt;/a> seems like a very viable alternative. It allows video calling, voice calling, meetings between an unlimited number of participants, and no sign up or account required. I&amp;rsquo;m not sure about the encryption and data privacy it has, but at least you know it doesn&amp;rsquo;t come with the Facebook SDK. Besides, there is also &lt;a href="https://matrix.org/">Matrix&lt;/a> which is cross-platform and has multiple clients. There are free software options available that universities should be looking into rather than all jumping onboard the Zoom train, then jumping onto the Teams train after Zoom derailed.&lt;/p>
&lt;h3 id="lockdown-browser--monitor">Lockdown Browser &amp;amp; Monitor&lt;/h3>
&lt;p>Due to corona virus, the final exam was going to have to change also. Obviously, us students couldn&amp;rsquo;t take the exam in person and this opened up doors to potential cheating. I found out we were going to have to use the intrusive proprietary Windows or Mac only garbage that is the &lt;a href="https://web.respondus.com/">Respondus Lockdown Browser&lt;/a>. So I contacted Professor X over email to find out if there was an alternate way to take the exam. For example, being given access to the final exam and then given a certain time window to finish and upload it. He told me this wouldn&amp;rsquo;t be possible. The browser apparently detects and does not allow usage through a VM based on the &lt;a href="https://support.respondus.com/support/index.php?/Knowledgebase/Article/View/201/25/i-receive-a-warning-the-browser-cant-be-used-in-virtual-machine-software-such-as-virtual-pc-vmware-and-parallels">Respondus knowledgebase&lt;/a>. Since I don&amp;rsquo;t own any Windows machines and I&amp;rsquo;m required lawfully and ethically to social distance myself, the only way I know I can complete the exam without issues is by partitioning my hard drive and installing the latest Windows, just for this one exam that lasts less than two hours.&lt;/p>
&lt;p>Furthermore, even though I could do all that, I&amp;rsquo;m not willing to. That would be using Windows and the Lockdown browser and implicitly affirming that forcing proprietary software on students is okay. Professor X emailed me a second time and informed me that it wasn&amp;rsquo;t really his choice to use Respondus Lockdown browser, that &amp;ldquo;the university&amp;rdquo; had decided on it. Whether that means there was some vote within the faculty of the computer science department or the dictate was simply handed down university-wide I don&amp;rsquo;t know. I&amp;rsquo;m not very interested in the beaurocracy. He told me that &amp;ldquo;We are under extraordinary circumstances that no one foresaw 3 weeks ago. We&amp;rsquo;ve all had to make changes and exceptions to ways we work&amp;hellip; I highly encourage you to also be sympathetic to the situation and consider making exceptions&amp;rdquo;. After that he offered to help me repartition my machine to install Windows and mentioned that the university offers free legal Windows 10 licenses available to students. So I took the next step and contacted the chair of the CS department at SIUe. He reaffirmed what Professor X had already said and was not willing to have Professor X make an exception.&lt;/p>
&lt;p>So I took Professor X&amp;rsquo;s advice and was sympathetic and considered making an exception. And then after two seconds of thought I decided that dropping the class and refusing to use it was as sympathetic as I can get to proprietary software. I wasn&amp;rsquo;t going to repartition my computer to install the proprietary backdoored malware operating system Windows that could rootkit my machine so that I could install a proprietary malware browser and &amp;ldquo;monitor&amp;rdquo; that purposely spies on and cripples the operating system. And then I realized it&amp;rsquo;s probable that some of my other classes would require Respondus lockdown software as well this semester for the final exam and I couldn&amp;rsquo;t in good conscience use it. Also, it&amp;rsquo;s likely that due to COVID-19 my summer classes would also require using it. Even if those classes didn&amp;rsquo;t require that proprietary software, it became clear to me that there were certainly going to be obstacles I simply couldn&amp;rsquo;t get over in the future without switching professors, retaking classes, and constantly doing extra work without much benefit or change to the software the university was using. All of that could also prolong my graduation by a year, two years, or who knows how long racking up student debt. I had already came so far as I was two semesters away from graduating after this one. However, if I dropped out of SIUe, I would free up enough time to build my portfolio, improve my programming skills, network with free software organizations and potentially get some real-world experience. So, I dropped out. It was at great personal cost to myself, but it was the only ethical option left.&lt;/p></description></item></channel></rss>